DECLARE
    have_type TEXT;
    want_type TEXT;
BEGIN
    -- Get the data type.
    perform public.piggly_branch($PIGGLY$bb88ee10e31d109a$PIGGLY$);
    IF public.piggly_cond($PIGGLY$bb77e39be1d24cce$PIGGLY$, ($1 IS NULL)) THEN
        perform public.piggly_branch($PIGGLY$a03abb910eaa9765$PIGGLY$);
        have_type := _get_col_type($2, $3);
    ELSE
        perform public.piggly_branch($PIGGLY$b0478cf94209da72$PIGGLY$);
        have_type := _get_col_type($1, $2, $3);
    END IF;

    IF public.piggly_cond($PIGGLY$01b5fbc3112347a0$PIGGLY$, (have_type IS NULL)) THEN
        perform public.piggly_branch($PIGGLY$dbdb0232924e4792$PIGGLY$);
        perform public.piggly_branch($PIGGLY$35c912534b7e8780$PIGGLY$);RETURN fail( $5 ) || E'\n' || diag (
            '   Column ' || COALESCE(quote_ident($1) || '.', '')
            || quote_ident($2) || '.' || quote_ident($3) || ' does not exist'
        );
    END IF;

    want_type := format_type_string($4);
    IF public.piggly_cond($PIGGLY$da1a24bef8018013$PIGGLY$, (want_type IS NULL)) THEN
        perform public.piggly_branch($PIGGLY$9a283ba8d2432544$PIGGLY$);
        perform public.piggly_branch($PIGGLY$993a66bd722b2688$PIGGLY$);RETURN fail( $5 ) || E'\n' || diag (
            '    Type ' || $4 || ' does not exist'
        );
    END IF;

    IF public.piggly_cond($PIGGLY$dc35323759f500cd$PIGGLY$, (have_type = want_type)) THEN
        -- We're good to go.
        perform public.piggly_branch($PIGGLY$fd51e1e308e9a452$PIGGLY$);
        perform public.piggly_branch($PIGGLY$b7c11deaa56f57e3$PIGGLY$);RETURN ok( true, $5 );
    END IF;

    -- Wrong data type. tell 'em what we really got.
    perform public.piggly_branch($PIGGLY$55a5a848bed894b1$PIGGLY$);RETURN ok( false, $5 ) || E'\n' || diag(
           '        have: ' || have_type ||
        E'\n        want: ' || want_type
    );
END;