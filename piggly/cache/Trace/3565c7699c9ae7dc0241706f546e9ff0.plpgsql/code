DECLARE
    privs  TEXT[] := ARRAY['INSERT', 'REFERENCES', 'SELECT', 'UPDATE'];
    grants TEXT[] := '{}';
BEGIN
    perform public.piggly_branch($PIGGLY$31d062057960ce90$PIGGLY$);
    FOR i IN 1..array_upper(privs, 1) LOOP
        perform public.piggly_cond($PIGGLY$680014d3f1fd6fbe$PIGGLY$, true);
        perform public.piggly_branch($PIGGLY$94a579c44e34b00f$PIGGLY$);
        BEGIN
            perform public.piggly_branch($PIGGLY$570a94185b59f31c$PIGGLY$);
            IF public.piggly_cond($PIGGLY$183f7fe1ab0ecc32$PIGGLY$, (pg_catalog.has_any_column_privilege($1, $2, privs[i]))) THEN
                perform public.piggly_branch($PIGGLY$a0eaca4222747819$PIGGLY$);
                grants := grants || privs[i];
            END IF;
        EXCEPTION WHEN undefined_table THEN
            -- Not a valid table name.
            perform public.piggly_branch($PIGGLY$09f2bc901f7dc814$PIGGLY$);
            perform public.piggly_branch($PIGGLY$e3f241e7e11bc489$PIGGLY$);RETURN '{undefined_table}';
        WHEN undefined_object THEN
            -- Not a valid role.
            perform public.piggly_branch($PIGGLY$f0d4771aa1599fee$PIGGLY$);
            perform public.piggly_branch($PIGGLY$aea099e379becff3$PIGGLY$);RETURN '{undefined_role}';
        WHEN invalid_parameter_value THEN
            -- Not a valid permission on this version of PostgreSQL; ignore;
        perform public.piggly_branch($PIGGLY$5916cc16b77e9b5c$PIGGLY$);
        END;
    
        perform public.piggly_signal($PIGGLY$680014d3f1fd6fbe$PIGGLY$, $PIGGLY$@$PIGGLY$);
    END LOOP;
perform public.piggly_cond($PIGGLY$680014d3f1fd6fbe$PIGGLY$, false);
    perform public.piggly_branch($PIGGLY$14ae5e10ea9a3081$PIGGLY$);RETURN grants;
END;