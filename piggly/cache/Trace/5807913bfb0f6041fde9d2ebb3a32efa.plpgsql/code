DECLARE
  l_item RECORD;
  l_name item.name%TYPE;
  l_sell_in item.sell_in%TYPE;
  l_quality item.quality%TYPE;
  l_base_name text;
  l_is_conjured boolean;
  l_new_quality numeric;
  l_new_sell_in numeric;
BEGIN
  perform public.piggly_branch($PIGGLY$4ab8709ce7d313b8$PIGGLY$);
  FOR l_item IN
    SELECT name, sell_in, quality, ctid FROM item FOR UPDATE
  LOOP
    perform public.piggly_cond($PIGGLY$aaf0bde63065a181$PIGGLY$, true);
    perform public.piggly_branch($PIGGLY$7f4ff316e517810e$PIGGLY$);
    l_name    := l_item.name;
    l_sell_in := l_item.sell_in;
    l_quality := l_item.quality;

    l_is_conjured := LEFT(l_name, 9) = 'Conjured ';
    l_base_name := CASE WHEN l_is_conjured THEN SUBSTRING(l_name FROM 10) ELSE l_name END;

    CASE
      WHEN public.piggly_cond($PIGGLY$fd39abf55608375a$PIGGLY$, (l_base_name = 'Sulfuras, Hand of Ragnaros')) THEN
        perform public.piggly_branch($PIGGLY$90d41b2bea21bbef$PIGGLY$);
        SELECT * FROM update_sulfuras(l_quality, l_sell_in, l_is_conjured) INTO l_new_quality, l_new_sell_in;
      WHEN public.piggly_cond($PIGGLY$1fe9f48f61c45b4e$PIGGLY$, (l_base_name = 'Aged Brie')) THEN
        perform public.piggly_branch($PIGGLY$24de667b509a2094$PIGGLY$);
        SELECT * FROM update_aged_brie(l_quality, l_sell_in, l_is_conjured) INTO l_new_quality, l_new_sell_in;
      WHEN public.piggly_cond($PIGGLY$bded41b6011b35c3$PIGGLY$, (l_base_name = 'Backstage passes to a TAFKAL80ETC concert')) THEN
        perform public.piggly_branch($PIGGLY$a99ba0832c0540a2$PIGGLY$);
        SELECT * FROM update_backstage_passes(l_quality, l_sell_in, l_is_conjured) INTO l_new_quality, l_new_sell_in;
      ELSE
        perform public.piggly_branch($PIGGLY$877267290fb6c48c$PIGGLY$);
        SELECT * FROM update_normal(l_quality, l_sell_in, l_is_conjured) INTO l_new_quality, l_new_sell_in;
    END CASE;

    l_quality := l_new_quality;
    l_sell_in := l_new_sell_in;

    UPDATE item
      SET name = l_name, sell_in = l_sell_in, quality = l_quality
      WHERE ctid = l_item.ctid;
  
    perform public.piggly_signal($PIGGLY$aaf0bde63065a181$PIGGLY$, $PIGGLY$@$PIGGLY$);
  END LOOP;
perform public.piggly_cond($PIGGLY$aaf0bde63065a181$PIGGLY$, false);
END;