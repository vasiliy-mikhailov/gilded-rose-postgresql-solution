DECLARE
    akey NAME[];
    keys TEXT[] := '{}';
    have TEXT;
BEGIN
    perform public.piggly_branch($PIGGLY$52e68808faa110ef$PIGGLY$);
    FOR akey IN SELECT * FROM _keys($1, $2) LOOP
        perform public.piggly_cond($PIGGLY$af97a6e5f9ee4979$PIGGLY$, true);
        perform public.piggly_branch($PIGGLY$b0bf9e4400156422$PIGGLY$);
        IF public.piggly_cond($PIGGLY$3f2d6c93b2ae875a$PIGGLY$, (akey = $3)) THEN perform public.piggly_branch($PIGGLY$e1e0b9bfdd062867$PIGGLY$);perform public.piggly_branch($PIGGLY$94aade8d73eec99a$PIGGLY$);RETURN pass($4); END IF;
        keys = keys || akey::text;
    
        perform public.piggly_signal($PIGGLY$af97a6e5f9ee4979$PIGGLY$, $PIGGLY$@$PIGGLY$);
    END LOOP;
perform public.piggly_cond($PIGGLY$af97a6e5f9ee4979$PIGGLY$, false);
    IF public.piggly_cond($PIGGLY$67b162ee2657bfa1$PIGGLY$, (array_upper(keys, 0) = 1)) THEN
        perform public.piggly_branch($PIGGLY$d977e4a1a146cfef$PIGGLY$);
        have := 'No ' || $5 || ' constraints';
    ELSE
        perform public.piggly_branch($PIGGLY$494fe6407454fb26$PIGGLY$);
        have := array_to_string(keys, E'\n              ');
    END IF;

    perform public.piggly_branch($PIGGLY$3000faa61e4a55af$PIGGLY$);RETURN fail($4) || E'\n' || diag(
             '        have: ' || have
       || E'\n        want: ' || CASE WHEN $3 IS NULL THEN 'NULL' ELSE $3::text END
    );
END;