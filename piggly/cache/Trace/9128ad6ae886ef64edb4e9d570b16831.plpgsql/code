DECLARE
    akey NAME[];
    keys TEXT[] := '{}';
    have TEXT;
BEGIN
    perform public.piggly_branch($PIGGLY$2d04a15a61f84ff1$PIGGLY$);
    FOR akey IN SELECT * FROM _keys($1, $2) LOOP
        perform public.piggly_cond($PIGGLY$b258ed82a3c869c2$PIGGLY$, true);
        perform public.piggly_branch($PIGGLY$119335c73f1f1fcc$PIGGLY$);
        IF public.piggly_cond($PIGGLY$176b3bdf7befc994$PIGGLY$, (akey = $3)) THEN perform public.piggly_branch($PIGGLY$418d097a478b6bca$PIGGLY$);perform public.piggly_branch($PIGGLY$1623bfe09f03a77c$PIGGLY$);RETURN pass($4); END IF;
        keys = keys || akey::text;
    
        perform public.piggly_signal($PIGGLY$b258ed82a3c869c2$PIGGLY$, $PIGGLY$@$PIGGLY$);
    END LOOP;
perform public.piggly_cond($PIGGLY$b258ed82a3c869c2$PIGGLY$, false);
    IF public.piggly_cond($PIGGLY$5a3c0a49e898078e$PIGGLY$, (array_upper(keys, 0) = 1)) THEN
        perform public.piggly_branch($PIGGLY$fc1006efa79aab93$PIGGLY$);
        have := 'No ' || $5 || ' constraints';
    ELSE
        perform public.piggly_branch($PIGGLY$54d57fa50c37c92b$PIGGLY$);
        have := array_to_string(keys, E'\n              ');
    END IF;

    perform public.piggly_branch($PIGGLY$429a688abac266c9$PIGGLY$);RETURN fail($4) || E'\n' || diag(
             '        have: ' || have
       || E'\n        want: ' || CASE WHEN $3 IS NULL THEN 'NULL' ELSE $3::text END
    );
END;