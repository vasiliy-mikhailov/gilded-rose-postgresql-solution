DECLARE
    akey NAME[];
    keys TEXT[] := '{}';
    have TEXT;
BEGIN
    perform public.piggly_branch($PIGGLY$d1af9f97e90b3c8b$PIGGLY$);
    FOR akey IN SELECT * FROM _keys($1, $2) LOOP
        perform public.piggly_cond($PIGGLY$f6e2a8c04321eebb$PIGGLY$, true);
        perform public.piggly_branch($PIGGLY$73f1c54271c9243a$PIGGLY$);
        IF public.piggly_cond($PIGGLY$5dbe6db470e0d2c4$PIGGLY$, (akey = $3)) THEN perform public.piggly_branch($PIGGLY$0004fe948c353f19$PIGGLY$);perform public.piggly_branch($PIGGLY$0dabcfe0e84457ea$PIGGLY$);RETURN pass($4); END IF;
        keys = keys || akey::text;
    
        perform public.piggly_signal($PIGGLY$f6e2a8c04321eebb$PIGGLY$, $PIGGLY$@$PIGGLY$);
    END LOOP;
perform public.piggly_cond($PIGGLY$f6e2a8c04321eebb$PIGGLY$, false);
    IF public.piggly_cond($PIGGLY$50fc400bf250489e$PIGGLY$, (array_upper(keys, 0) = 1)) THEN
        perform public.piggly_branch($PIGGLY$1e223f8fa4138865$PIGGLY$);
        have := 'No ' || $5 || ' constraints';
    ELSE
        perform public.piggly_branch($PIGGLY$044ab00ea1c806d4$PIGGLY$);
        have := array_to_string(keys, E'\n              ');
    END IF;

    perform public.piggly_branch($PIGGLY$d5facffa3ab04a48$PIGGLY$);RETURN fail($4) || E'\n' || diag(
             '        have: ' || have
       || E'\n        want: ' || CASE WHEN $3 IS NULL THEN 'NULL' ELSE $3::text END
    );
END;