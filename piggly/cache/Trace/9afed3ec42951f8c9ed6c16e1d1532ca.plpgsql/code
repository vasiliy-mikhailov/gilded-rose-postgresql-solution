DECLARE
    have    TEXT    := _temptable( $1, '__taphave__' );
    want    TEXT    := _temptable( $2, '__tapwant__' );
    results TEXT[]  := '{}';
    res     BOOLEAN := TRUE;
    msg     TEXT    := '';
    rec     RECORD;
BEGIN
    perform public.piggly_branch($PIGGLY$ee3c72f601d374c4$PIGGLY$);
    BEGIN
        -- Find relevant records.
        perform public.piggly_branch($PIGGLY$b0c25ee0f6f13fa4$PIGGLY$);
        FOR rec in EXECUTE 'SELECT * FROM ' || want || ' ' || $4
                       || ' SELECT * FROM ' || have LOOP
            perform public.piggly_cond($PIGGLY$ae6a9735626cdba2$PIGGLY$, true);
            perform public.piggly_branch($PIGGLY$af9e2683d5f5e014$PIGGLY$);
            results := results || rec::text;
        
            perform public.piggly_signal($PIGGLY$ae6a9735626cdba2$PIGGLY$, $PIGGLY$@$PIGGLY$);
        END LOOP;
perform public.piggly_cond($PIGGLY$ae6a9735626cdba2$PIGGLY$, false);

        -- Drop the temporary tables.
        EXECUTE 'DROP TABLE ' || have;
        EXECUTE 'DROP TABLE ' || want;
    EXCEPTION WHEN syntax_error OR datatype_mismatch THEN
        perform public.piggly_branch($PIGGLY$1a42f2da427e1066$PIGGLY$);
        msg := E'\n' || diag(
            E'    Columns differ between queries:\n'
            || '        have: (' || _temptypes(have) || E')\n'
            || '        want: (' || _temptypes(want) || ')'
        );
        EXECUTE 'DROP TABLE ' || have;
        EXECUTE 'DROP TABLE ' || want;
        perform public.piggly_branch($PIGGLY$e75e971bef3d0a18$PIGGLY$);RETURN ok(FALSE, $3) || msg;
    END;

    -- What records do we have?
    IF public.piggly_cond($PIGGLY$f3752c2b46d7b71d$PIGGLY$, (results[1] IS NOT NULL)) THEN
        perform public.piggly_branch($PIGGLY$10418e24746d7dc2$PIGGLY$);
        res := FALSE;
        msg := msg || E'\n' || diag(
            '    ' || $5 || E' records:\n        '
            ||  array_to_string( results, E'\n        ' )
        );
    END IF;

    perform public.piggly_branch($PIGGLY$83564a05975db3ab$PIGGLY$);RETURN ok(res, $3) || msg;
END;