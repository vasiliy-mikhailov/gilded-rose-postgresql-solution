DECLARE
    query     TEXT := _query($1);
    errcode   ALIAS FOR $2;
    errmsg    ALIAS FOR $3;
    desctext  ALIAS FOR $4;
    descr     TEXT;
BEGIN
    perform public.piggly_branch($PIGGLY$93a1b846eb8a8d20$PIGGLY$);
    descr := COALESCE(
          desctext,
          'threw ' || errcode || ': ' || errmsg,
          'threw ' || errcode,
          'threw ' || errmsg,
          'threw an exception'
    );
    EXECUTE query;
    perform public.piggly_branch($PIGGLY$f9311c4570f2b553$PIGGLY$);RETURN ok( FALSE, descr ) || E'\n' || diag(
           '      caught: no exception' ||
        E'\n      wanted: ' || COALESCE( errcode, 'an exception' )
    );
EXCEPTION WHEN OTHERS OR ASSERT_FAILURE THEN
    perform public.piggly_branch($PIGGLY$31703a771185011c$PIGGLY$);
    IF (public.piggly_cond($PIGGLY$2dcc93dd35ce25aa$PIGGLY$, (errcode IS NULL OR SQLSTATE = errcode)
        AND ( errmsg IS NULL OR SQLERRM = errmsg)))
    THEN
        -- The expected errcode and/or message was thrown.
        perform public.piggly_branch($PIGGLY$214c071ce6dcc4ea$PIGGLY$);
        perform public.piggly_branch($PIGGLY$133443d34482913b$PIGGLY$);RETURN ok( TRUE, descr );
    ELSE
        -- This was not the expected errcode or errmsg.
        perform public.piggly_branch($PIGGLY$85a59478e307cd2a$PIGGLY$);
        perform public.piggly_branch($PIGGLY$01c7431ed7aa8931$PIGGLY$);RETURN ok( FALSE, descr ) || E'\n' || diag(
               '      caught: ' || SQLSTATE || ': ' || SQLERRM ||
            E'\n      wanted: ' || COALESCE( errcode, 'an exception' ) ||
            COALESCE( ': ' || errmsg, '')
        );
    END IF;
END;