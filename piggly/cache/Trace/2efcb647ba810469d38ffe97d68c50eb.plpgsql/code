DECLARE
    privs  TEXT[] := ARRAY['SELECT', 'UPDATE', 'USAGE'];
    grants TEXT[] := '{}';
BEGIN
    perform public.piggly_branch($PIGGLY$97ecce41b0ba69d5$PIGGLY$);
    FOR i IN 1..array_upper(privs, 1) LOOP
        perform public.piggly_cond($PIGGLY$3d01069edb7488dc$PIGGLY$, true);
        perform public.piggly_branch($PIGGLY$eb2990b65186154b$PIGGLY$);
        BEGIN
            perform public.piggly_branch($PIGGLY$5325dc3e3f3bf7a3$PIGGLY$);
            IF public.piggly_cond($PIGGLY$9419337585a1a5e8$PIGGLY$, (pg_catalog.has_sequence_privilege($1, $2, privs[i]))) THEN
                perform public.piggly_branch($PIGGLY$7c093d0d8d039153$PIGGLY$);
                grants := grants || privs[i];
            END IF;
        EXCEPTION WHEN undefined_table THEN
            -- Not a valid sequence name.
            perform public.piggly_branch($PIGGLY$c2e4a3a026a65bfc$PIGGLY$);
            perform public.piggly_branch($PIGGLY$c2698a1505bcedc9$PIGGLY$);RETURN '{undefined_table}';
        WHEN undefined_object THEN
            -- Not a valid role.
            perform public.piggly_branch($PIGGLY$1497306527a1186f$PIGGLY$);
            perform public.piggly_branch($PIGGLY$cdb55087427f905f$PIGGLY$);RETURN '{undefined_role}';
        WHEN invalid_parameter_value THEN
            -- Not a valid permission on this version of PostgreSQL; ignore;
        perform public.piggly_branch($PIGGLY$0ab2ad7d8ad97b9f$PIGGLY$);
        END;
    
        perform public.piggly_signal($PIGGLY$3d01069edb7488dc$PIGGLY$, $PIGGLY$@$PIGGLY$);
    END LOOP;
perform public.piggly_cond($PIGGLY$3d01069edb7488dc$PIGGLY$, false);
    perform public.piggly_branch($PIGGLY$110027011e55afca$PIGGLY$);RETURN grants;
END;