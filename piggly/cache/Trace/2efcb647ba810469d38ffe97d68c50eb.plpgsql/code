DECLARE
    privs  TEXT[] := ARRAY['SELECT', 'UPDATE', 'USAGE'];
    grants TEXT[] := '{}';
BEGIN
    perform public.piggly_branch($PIGGLY$77fff1d5cecedfd5$PIGGLY$);
    FOR i IN 1..array_upper(privs, 1) LOOP
        perform public.piggly_cond($PIGGLY$8b954cd62206bf08$PIGGLY$, true);
        perform public.piggly_branch($PIGGLY$eee14935bc600490$PIGGLY$);
        BEGIN
            perform public.piggly_branch($PIGGLY$f712ec8bb1dd679b$PIGGLY$);
            IF public.piggly_cond($PIGGLY$7761f3cb0b2fc377$PIGGLY$, (pg_catalog.has_sequence_privilege($1, $2, privs[i]))) THEN
                perform public.piggly_branch($PIGGLY$271b9def7e5e8537$PIGGLY$);
                grants := grants || privs[i];
            END IF;
        EXCEPTION WHEN undefined_table THEN
            -- Not a valid sequence name.
            perform public.piggly_branch($PIGGLY$47a09f2cb51aaf5c$PIGGLY$);
            perform public.piggly_branch($PIGGLY$71edabd38eafd0b0$PIGGLY$);RETURN '{undefined_table}';
        WHEN undefined_object THEN
            -- Not a valid role.
            perform public.piggly_branch($PIGGLY$3ad3583250a4fad5$PIGGLY$);
            perform public.piggly_branch($PIGGLY$7f7fb7a3fcc6303c$PIGGLY$);RETURN '{undefined_role}';
        WHEN invalid_parameter_value THEN
            -- Not a valid permission on this version of PostgreSQL; ignore;
        perform public.piggly_branch($PIGGLY$ac239cdccd23dcc1$PIGGLY$);
        END;
    
        perform public.piggly_signal($PIGGLY$8b954cd62206bf08$PIGGLY$, $PIGGLY$@$PIGGLY$);
    END LOOP;
perform public.piggly_cond($PIGGLY$8b954cd62206bf08$PIGGLY$, false);
    perform public.piggly_branch($PIGGLY$0d4ab0d7b8b2a945$PIGGLY$);RETURN grants;
END;